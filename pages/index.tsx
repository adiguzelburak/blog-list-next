import Head from 'next/head';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { postActions } from '../redux/posts/postsSlice';
import { PostInfoType, PostType, SelectorType } from '../utilities/types';
import axios from 'axios';

type Props = {
  postInfo: PostInfoType;
}


export default function Home({ postInfo }: Props) {
  const dispatch = useDispatch();
  const [isSearched, setIsSearched] = useState(false)
  const [searchedTitle, setSearchedTitle] = useState('')
  const posts = useSelector<SelectorType, PostType[]>(state => state.post.posts)
  const searched = useSelector<SelectorType, PostInfoType | null>(state => state.post.searchedPosts)

  useEffect(() => {
    dispatch(postActions.setPostList(postInfo.posts))
  }, [])

  const searchPost = (postTitle: string) => {
    dispatch(postActions.getPostsBySearchedRequest(postTitle))
  }

  useEffect(() => {
    if (searchedTitle !== "") {
      setIsSearched(true)
    } else {
      setIsSearched(false);

    }
  }, [searchedTitle])

  const onChange = (e: any) => {
    searchPost(e.target.value)
    setSearchedTitle(e.target.value)
  }

  return (
    <>
      <Head>
        <title>Burak Blog List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>Blog List</h1>
        <input
          onChange={onChange}
          placeholder='Please enter a Post Name' />

        <ul>
          {isSearched
            ? <>
              {searched?.posts?.map(((post: PostType) => <li key={post.id}>
                <Link href={`/posts/${post.id}`}>{post.title}</Link>
              </li>))}</>
            : <>
              {posts.map(((post: PostType) => <li key={post.id}>
                <Link href={`/posts/${post.id}`}>{post.title}</Link>
              </li>))}</>}
        </ul>
      </div >
    </>
  )
}


export async function getServerSideProps() {
  const responseDetail = await fetch('https://dummyjson.com/posts');
  const postInfo = await responseDetail.json();

  return {
    props: {
      postInfo,
    },
  };
}